trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

variables:
  environment: 'dev'
  tf_version: '1.5.7'
  workingDirectory: 'environments/$(environment)'

stages:
- stage: TerraformInit
  displayName: 'Terraform Init'
  jobs:
    - job: Init
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: UseTerraform@0
          inputs:
            terraformVersion: '$(tf_version)'

        - script: |
            cd $(workingDirectory)
            terraform init
          displayName: 'Terraform Init'

- stage: TerraformValidate
  displayName: 'Terraform Validate'
  dependsOn: TerraformInit
  jobs:
    - job: Validate
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - script: |
            cd $(workingDirectory)
            terraform validate
          displayName: 'Terraform Validate'

- stage: TerraformPlan
  displayName: 'Terraform Plan'
  dependsOn: TerraformValidate
  jobs:
    - job: Plan
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - script: |
            cd $(workingDirectory)
            terraform plan -out=tfplan
          displayName: 'Terraform Plan'

- stage: TerraformApply
  displayName: 'Terraform Apply'
  dependsOn: TerraformPlan
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
    - job: Apply
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - script: |
            cd $(workingDirectory)
            terraform apply -auto-approve tfplan
          displayName: 'Terraform Apply'